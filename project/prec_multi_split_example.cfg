# ==============================================================================
#        NOTE:   Do not use " for array input
# ==============================================================================
# Values of q
#   q	      - values for each level
# ------------------------------------------------------------------------------
q	    = 0.8 0.2 0.3

# ==============================================================================
# Number of iterations per level
#   fixed     - the user specifies the number of iterations for each level
#		except the level 0, for each we always have 1 (V-cycle)
#		>>> NEEDED: level_niter
#   dynamic   - the user specifies the parameter eps for each level, and
#		on each level prec iterates until the relative drop in residual
#		is less than eps
#		>>> NEEDED: level_eps
# NOTE: both level_niter and level_eps correspond to levels 1+
# ------------------------------------------------------------------------------
inner_iter  = fixed
level_niter = 2 3
# ------------------------------------------------------------------------------
inner_iter  = dynamic
level_eps   = 1e-2

# ==============================================================================
# Type of variable elimination
#   exact     - no dropping of elements in the factors
#   ilut      - ILUT(p,\tau) elimination
#		>>> NEEDED: ilut_p ilut_tau
# ------------------------------------------------------------------------------
lu_method   = exact
# ------------------------------------------------------------------------------
lu_method   = ilut
ilut_p	    = 7
ilut_tau    = 1e-4

# ==============================================================================
# Reordering of variables for elimination
#   optimal   - use modified approximate minimum degree (AMD) [NOT_IMPLEMENTED]
#   original  - original algorithm (basically, tail elimination)
#   simple_1  - simplified: reorder all variables by the number of elements
#		in the row
# ------------------------------------------------------------------------------
elim_order  = original
# ------------------------------------------------------------------------------
elim_order  = simple_1

# ==============================================================================
# Criteria for stopping the elimination process
#   degree    - eliminate until the degree of remaining nodes is
#		bigger than a threshold
#		>>> NEEEDED: degree_max
#   goal      - eliminate until the number of remaining nodes is less than
#		a given fraction of nodes on the current level
#		>>> NEEEDED: level_ratio
# ------------------------------------------------------------------------------
elim_stop   = degree
degree_max  = 3
# ------------------------------------------------------------------------------
elim_stop   = goal
level_ratio = 0.25

# ==============================================================================
# Criterias for stopping the construction process (any would stop the process)
#   coarse_n    - the size of the system to be considered as the coarsest
#   max_levels	- maximum number of levels
# ------------------------------------------------------------------------------
coarse_n    = 0
max_levels  = 15
